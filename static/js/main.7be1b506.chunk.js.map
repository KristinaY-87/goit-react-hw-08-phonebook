{"version":3,"sources":["redux/contacts-actions.js","component/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","component/Navigation.js","component/UserMenu/default-avatar.png","component/UserMenu/UserMenu.js","component/AuthNav.js","component/AppBar.js","component/PrivateRoute.js","component/PublicRoute.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","className","s","container","src","alt","width","btn","type","onClick","AuthNav","header","justifyContent","alignItems","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurretnUser","fallback","height","path","items","filter","id","loading","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7be1b506.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__34361\",\"avatar\":\"UserMenu_avatar__2IWxq\",\"name\":\"UserMenu_name__3hlYp\",\"btn\":\"UserMenu_btn__164bt\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\nimport s from './UserMenu.module.css';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={s.container}>\n    <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\n    <span className={s.name}>Welcome, {name}!</span>\n    <button className={s.btn} type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Sign up\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","// import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from '../component/UserMenu/UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport AppBar from './component/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './component/PrivateRoute';\nimport PublicRoute from './component/PublicRoute';\n// import Container from './App.css'\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /*webpackChunkName: \"home-view\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /*webpackChunkName: \"register-view\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /*webpackChunkName: \"login-view\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /*webpackChunkName: \"contacts-view\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense\n          fallback={\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={80} width={80} />\n          }\n        >\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              component={RegisterView}\n              redirectTo=\"/\"\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              component={LoginView}\n              redirectTo=\"/contacts\"\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","// import { combineReducers } from \"redux\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\nimport { authReducer } from './auth';\n\n// console.log(process.env.NODE_ENV);\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}