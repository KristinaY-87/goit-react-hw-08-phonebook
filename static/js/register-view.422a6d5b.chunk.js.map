{"version":3,"sources":["views/views.module.css","views/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","s","wrap","title","onSubmit","form","autoComplete","label","type","onChange","btn","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,IAAM,qB,iICIvKC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,sBAAKW,UAAWC,IAAEC,KAAlB,UACE,oBAAIF,UAAWC,IAAEE,MAAjB,8BAEA,uBACEC,SAAUL,KAAKL,aACfM,UAAWC,IAAEI,KACbC,aAAa,MAHf,UAKE,wBAAON,UAAWC,IAAEM,MAApB,iBAEE,uBACEC,KAAK,OACLrB,KAAK,OACLK,MAAOL,EACPsB,SAAUV,KAAKT,kBAInB,wBAAOU,UAAWC,IAAEM,MAApB,kBAEE,uBACEC,KAAK,QACLrB,KAAK,QACLK,MAAOJ,EACPqB,SAAUV,KAAKT,kBAInB,wBAAOU,UAAWC,IAAEM,MAApB,qBAEE,uBACEC,KAAK,WACLrB,KAAK,WACLK,MAAOH,EACPoB,SAAUV,KAAKT,kBAInB,wBAAQU,UAAWC,IAAES,IAAKF,KAAK,SAA/B,+B,GA7DiBG,aAsErBC,EAAqB,CAEzBd,WAAYe,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC9B","file":"static/js/register-view.422a6d5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"views_container__3cob1\",\"wrap\":\"views_wrap__2F_dB\",\"title\":\"views_title__3_DUs\",\"form\":\"views_form__VOTsp\",\"label\":\"views_label__3u3hu\",\"btn\":\"views_btn__3ffjS\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport s from './views.module.css';\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div className={s.wrap}>\n        <h1 className={s.title}>Please, sign up!</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className={s.form}\n          autoComplete=\"off\"\n        >\n          <label className={s.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={s.label}>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={s.label}>\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button className={s.btn} type=\"submit\">\n            Sign up\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  // onRegister: (data) => dispatch(authOperations.register(data))\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}